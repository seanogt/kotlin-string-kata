/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package stringkata

import java.util.*

class Calculator {


    fun add(numbers: String): Int {

        val delimiter = getDelimiter(numbers)

        val strippedStringOfNumbers =
            if (numbers.startsWith("//")) numbers.substring(if (delimiter.length == 1) 3 else delimiter.length + 4)
                .replace("\\n", delimiter)
            else numbers.replace("\\n", delimiter)

        if (strippedStringOfNumbers.endsWith(delimiter))
            throw IllegalArgumentException("List of numbers cannot end with a delimiter")

        val listOfNumbers = StringTokenizer(strippedStringOfNumbers, delimiter).toList()
            .map { Integer.parseInt(it as String?) }.filter { it < 1000 }

        var negativeNumbers = listOfNumbers.filter { it < 0 }

        if (!negativeNumbers.isEmpty())
            throw IllegalArgumentException("negatives not allowed:${negativeNumbers.joinToString(", ")}")

        return listOfNumbers.sum()
    }

    private fun getDelimiter(numbers: String): String {
        val indexOfOpenBracket = numbers.indexOf('[')
        val indexOfClosedBracket = numbers.indexOf(']')

        return if (numbers.startsWith("//")) {
            if (indexOfOpenBracket > 0 && indexOfClosedBracket > 0) {
                numbers.substring(indexOfOpenBracket + 1, indexOfClosedBracket)
            } else numbers.substring(2, 3)
        } else ","
    }
}

fun main() {
    println("2 + 4 = " + Calculator().add("2,4"))
}
