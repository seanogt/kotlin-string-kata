/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package stringkata

import io.kotest.assertions.throwables.shouldThrow
import io.kotest.core.spec.style.StringSpec
import io.kotest.matchers.shouldBe

class CalculatorTest : StringSpec({

    val calculator = Calculator()

    calculator.add("1001,2") shouldBe 2
    "empty string will return 0" {
        calculator.add("") shouldBe 0
    }

    "1 number will return the same number"{
        calculator.add("3") shouldBe 3
    }

    "2 numbers will return the sum" {
        calculator.add("2,3") shouldBe 5
    }

    "can handle an unknown amount of numbers"{
        calculator.add("2,5,9,7,4") shouldBe 27
    }

    "can handle new lines between numbers (instead of commas)"{
        calculator.add("1\\n2,3") shouldBe 6
    }

    "can't a list of numbers that ends with a delimiter"{
        val exception = shouldThrow<IllegalArgumentException> {
            calculator.add("1,\\n")
        }
        exception.message shouldBe "List of numbers cannot end with a delimiter"
    }

    "can handle variable delimiters" {
        calculator.add("//;\\n1;2") shouldBe 3
    }

    "can't handle negative numbers and throws exception contain those numbers"{
        val exception = shouldThrow<IllegalArgumentException> {
            calculator.add("2,-5,9,-7,4")
        }
        exception.message shouldBe "negatives not allowed:-5, -7"
    }

    "Numbers bigger than 1000 should be ignored"{
        calculator.add("1001,2") shouldBe 2
    }

    "Delimiters can be of any length with the following format"{
        calculator.add("//[***]\\n1***2***3") shouldBe 6
    }
})
